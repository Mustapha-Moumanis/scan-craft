services:
  mongodb:
    image: mongo:7.0
    container_name: scan-craft-mongodb
    env_file:
      - .env
    volumes:
      - mongodb_data:/data/db
    networks:
      - scan-craft-network
    restart: unless-stopped
    expose:
      - "27017"

  backend:
    build: ./backend
    container_name: scan-craft-backend
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - scan-craft-network
    restart: unless-stopped
    expose:
      - "3001"

  frontend:
    build: ./frontend
    container_name: scan-craft-frontend
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - scan-craft-network
    restart: unless-stopped
    expose:
      - "3000"

  nginx:
    build:
      context: ./nginx
      args:
        BUILD_ENV: production
        DOMAIN: scan-craft.mustapha-moumanis.me
    container_name: scan-craft-nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=scan-craft.mustapha-moumanis.me
      - SSL_EMAIL=${SSL_EMAIL:-}
    volumes:
      # Use same volume as certbot for Let's Encrypt certificates
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - scan-craft-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: scan-craft-certbot
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - ./nginx/ssl:/app/ssl
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done;'"
    networks:
      - scan-craft-network

volumes:
  mongodb_data:
    driver: local
  certbot_conf:
    external: true
    name: scan-craft_certbot_conf
  certbot_www:
    driver: local

networks:
  scan-craft-network:
    driver: bridge
